
name: Deploy to Azure Spring Cloud with Key Vault
on: [push]

env:
  RESOURCE_GROUP: petclinic-demo
  SPRING_CLOUD_SERVICE: petclinic-demo
  # ==== APPS ====:  
  API_GATEWAY: api-gateway
  ADMIN_SERVER: admin-server
  CUSTOMERS_SERVICE: customers-service
  VETS_SERVICE: vets-service
  VISITS_SERVICE: visits-service
  # ==== JARS ====:  
  API_GATEWAY_JAR: spring-petclinic-api-gateway/target/spring-petclinic-api-gateway-2.2.1.jar
  ADMIN_SERVER_JAR: spring-petclinic-admin-server/target/spring-petclinic-admin-server-2.2.1.jar
  CUSTOMERS_SERVICE_JAR: spring-petclinic-customers-service/target/spring-petclinic-customers-service-2.2.1.jar
  VETS_SERVICE_JAR: spring-petclinic-vets-service/target/spring-petclinic-vets-service-2.2.1.jar
  VISITS_SERVICE_JAR: spring-petclinic-visits-service/target/spring-petclinic-visits-service-2.2.1.jar
  # ==== TF ====:
  TF_VAR_resource_group: petclinic-demo
  TF_VAR_region: WEST US 2
  TF_VAR_spring_cloud_service: petclinic-demo # customize this
  TF_VAR_api_gateway: api-gateway

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Login with Key Vault SP
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
    
    - name: Get service SP from Key Vault
      uses: Azure/get-keyvault-secrets@v1.0
      with:
        keyvault: "petclinicdemokv"
        secrets: "AZURE-CREDENTIALS-FOR-SPRING, TFtenantId, TFsubscriptionId, TFclientSecret, TFclientID"
      id: keyvaultaction
    
    - name: Get MySQL Secrets from Key Vault
      uses: Azure/get-keyvault-secrets@v1.0
      with:
        keyvault: "petclinicdemokv"
        secrets: "MYSQL-SERVER-FULL-NAME,MYSQL-DATABASE-NAME,MYSQL-SERVER-ADMIN-LOGIN-NAME,MYSQL-SERVER-ADMIN-PASSWORD"
      id: mysqlsecrets
      
    - name: Login with Service SP
      uses: azure/login@v1
      with:
        creds: ${{ steps.keyvaultaction.outputs.AZURE-CREDENTIALS-FOR-SPRING }}
        
    - name: Checkout your repo
      uses: actions/checkout@v2
      
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1

    - name: Terraform Init
      run: |
        cd ${{ github.workspace }}/terraform
        terraform init
        
    - name: Terraform Plan
      run: |
        cd ${{ github.workspace }}/terraform
        export ARM_CLIENT_ID=${{ steps.keyvaultaction.outputs.TFclientId }}
        export ARM_CLIENT_SECRET=${{ steps.keyvaultaction.outputs.TFclientSecret }}
        export ARM_SUBSCRIPTION_ID=${{ steps.keyvaultaction.outputs.TFsubscriptionId }}
        export ARM_TENANT_ID=${{ steps.keyvaultaction.outputs.TFtenantId }}
        terraform plan
